name: Production Database Migrations

env:
  DOTNET_VERSION: '9.0.x'            # set this to the dot net core version to use
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  SOLUTION_NAME: '{{cookiecutter.assembly_name}}.sln'
  BUILD_CONFIGURATION: Release_migration
  LPOINT_URL: ${{secrets.LPOINT}}
  NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

permissions:
  contents: read

on:
  push:
    branches:
      - master
    paths:
      - "src/api/{{cookiecutter.assembly_name}}/src/{{cookiecutter.assembly_name}}.Migrations/**"
  workflow_dispatch:
  
jobs:
  build:
    runs-on: windows-latest
    environment: Production

    steps:           
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{env.LPOINT_URL }}

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4.1.2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
        
      - name: Build with dotnet
        working-directory: src/api/{{cookiecutter.assembly_name}}
        run:  dotnet build ${{ env.SOLUTION_NAME }} --configuration ${{env.BUILD_CONFIGURATION}}
      
      - name: Azure Login
        uses: Azure/login@v2.2.0
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_DEPLOYMENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'  

      - name: Run Migrations
        working-directory: src/api/{{cookiecutter.assembly_name}}/src/{{cookiecutter.assembly_name}}.Migrations
        env: 
          DOTNET_ENVIRONMENT: Production
        run: dotnet run
