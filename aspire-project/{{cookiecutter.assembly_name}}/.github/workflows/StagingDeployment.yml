name: Staging Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - develop

env:
  DOTNET_VERSION: '9.0.x'            # set this to the dot net core version to use
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  LPOINT_URL: ${{secrets.LPOINT}}
  NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  
#https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read 

jobs:
  build:
    runs-on: ubuntu-latest
    environment: staging
    container:
      image: mcr.microsoft.com/azure-dev-cli-apps:latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME}}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{ env.LPOINT_URL }}

      - name: Log in with Azure (Federated Credentials)
        run: |
                azd auth login `
                  --client-id "$Env:AZURE_CLIENT_ID" `
                  --federated-credential-provider "github" `
                  --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Azure Dev Deploy
        run: azd deploy --no-prompt
        env:
          AZURE_ENV_NAME: ${{ env.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ env.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ env.AZURE_SUBSCRIPTION_ID }}
